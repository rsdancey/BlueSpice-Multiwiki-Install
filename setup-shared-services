#!/bin/bash

# BlueSpice Shared Services Setup Script
# Simple, clean setup that uses native Docker Compose

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Directory paths
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SHARED_DIR="${SCRIPT_DIR}/shared"
SHARED_ENV="${SHARED_DIR}/.shared.env"

echo -e "${BLUE}BlueSpice Shared Services Setup${NC}"
echo -e "${BLUE}===============================${NC}"
echo

# Ensure the shared services directory exists
if [[ ! -d "$SHARED_DIR" ]]; then
    echo -e "${RED}❌ Error: Shared services directory not found: $SHARED_DIR${NC}" >&2
    exit 1
fi

# Handle email configuration
if [[ -f "$SHARED_ENV" ]]; then
    source "$SHARED_ENV"
    CURRENT_EMAIL="${ADMIN_MAIL:-somuser@somedomain.tld}"
else
    CURRENT_EMAIL="somuser@somedomain.tld"
fi

read -p "Enter email address for Let's Encrypt (press Enter to use existing: $CURRENT_EMAIL): " NEW_EMAIL
ADMIN_MAIL=${NEW_EMAIL:-$CURRENT_EMAIL}

echo "Using admin mail: $ADMIN_MAIL"

# Update environment file if needed
if [[ -f "$SHARED_ENV" ]] && grep -q "ADMIN_MAIL=" "$SHARED_ENV"; then
    sed -i "s/^ADMIN_MAIL=.*/ADMIN_MAIL=${ADMIN_MAIL}/" "$SHARED_ENV"
else
    echo "ADMIN_MAIL=${ADMIN_MAIL}" >> "$SHARED_ENV"
fi

echo -e "${GREEN}✓ Email configuration updated${NC}"
echo

# Change to shared directory and start services
cd "$SHARED_DIR"

# Use the shared services management script for consistency
echo "Starting shared services..."
exec "${SCRIPT_DIR}/bluespice-shared-services" up
